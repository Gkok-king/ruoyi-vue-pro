spring:
  application:
    name: dashboard

  # 数据源配置项 TODO 多数据源；TODO 监控配置
  datasource:
    url: jdbc:mysql://42.192.160.95:3306/ruoyi-vue-pro?useSSL=false&useUnicode=true&characterEncoding=UTF-8&serverTimezone=CTT
    driver-class-name: com.mysql.jdbc.Driver
    username: root
    password: GONGmysql5.7

  # Redis 配置。Redisson 默认的配置足够使用，一般不需要进行调优
  redis:
    host: 42.192.160.95 # 地址
    port: 6379 # 端口
    database: 0 # 数据库索引
    timeout: 5000

  # Servlet 配置
  servlet:
    # 文件上传相关配置项
    multipart:
      max-file-size: 16MB # 单个文件大小
      max-request-size: 32MB # 设置总上传的文件大小

  # Spring Boot Admin 配置项
  boot:
    admin:
      # Spring Boot Admin Client 客户端的相关配置
      client:
        url: http://127.0.0.1:8080/${spring.boot.admin.context-path} # 设置 Spring Boot Admin Server 地址
      # Spring Boot Admin Server 服务端的相关配置
      context-path: /admin # 配置 Spring

  # Jackson 配置项
  jackson:
    serialization:
      write-dates-as-timestamps: true # 设置 Date 的格式，使用时间戳
      write-date-timestamps-as-nanoseconds: false # 设置不使用 nanoseconds 的格式。例如说 1611460870.401，而是直接 1611460870401
      write-durations-as-timestamps: true # 设置 Duration 的格式，使用时间戳
      fail-on-empty-beans: false # 允许序列化无属性的 Bean

  main:
    lazy-initialization: true # TODO 芋艿：本地开发环境，可以配置下 lazy 延迟加载

# 芋道配置项，设置当前项目所有自定义的配置
yudao:
  version: 1.0.0
  web:
    api-prefix: /api
    controller-package: cn.iocoder.dashboard
  security:
    token-header: Authorization
    token-secret: abcdefghijklmnopqrstuvwxyz
    token-timeout: 1d
    session-timeout: 30m
    mock-enable: true
    mock-secret: test
  swagger:
    title: 管理后台
    description: 提供管理员管理的所有功能
    version: 1.0.0
    base-package: cn.iocoder.dashboard.modules
  captcha:
    timeout: 5m
    width: 160
    height: 60
  file:
    base-path: http://127.0.0.1:1024/api/file/get/

# Apollo 配置中心
apollo:
  bootstrap:
    enabled: true # 设置 Apollo 在启动阶段生效
    eagerLoad:
      enabled: true # 设置 Apollo 在日志初始化前生效，可以实现日志的动态级别配置
  jdbc: # 自定义的 JDBC 配置项，用于数据库的地址
    url: ${spring.datasource.url}
    username: ${spring.datasource.username}
    password: ${spring.datasource.password}

# MyBatis Plus 的配置项
mybatis-plus:
  configuration:
    map-underscore-to-camel-case: true # 虽然默认为 true ，但是还是显示去指定下。
#    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl # 打印日志
  global-config:
    db-config:
      id-type: auto # 自增 ID
      logic-delete-value: 1 # 逻辑已删除值(默认为 1)
      logic-not-delete-value: 0 # 逻辑未删除值(默认为 0)
  mapper-locations: classpath*:mapper/*.xml
  type-aliases-package: cn.iocoder.dashboard.modules.*.dal.mysql.dataobject

# Actuator 监控端点的配置项
management:
  endpoints:
    web:
      exposure:
        include: '*' # 需要开放的端点。默认值只打开 health 和 info 两个端点。通过设置 * ，可以开放所有端点。
